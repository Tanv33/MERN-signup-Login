{"version":3,"sources":["components/Message/Message.jsx","components/Login/Login.jsx","components/Signup/Signup.jsx","components/Home/Home.jsx","components/Dashboard/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Message","props","Stack","sx","width","position","spacing","Alert","severity","type","message","validationSchema","yup","email","min","required","password","Login","useState","messageBar","setMessageBar","baseURL","window","location","hostname","split","formik","useFormik","initialValues","onSubmit","values","axios","post","then","result","data","setTimeout","history","push","useHistory","className","Box","component","m","noValidate","autoComplete","textAlign","handleSubmit","TextField","fullWidth","name","label","variant","placeholder","value","onChange","handleChange","error","touched","Boolean","errors","helperText","id","style","display","justifyContent","Button","size","color","margin","onClick","fullName","phoneNumber","address","Signup","genderValue","document","querySelector","gender","Number","catch","err","useEffect","get","res","onBlur","handleBlur","FormControl","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","Home","flexGrow","AppBar","Toolbar","IconButton","edge","mr","Typography","cursor","Dashboard","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wXAIe,SAASA,EAAQC,GAC9B,OACE,cAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,MAAO,OAAQC,SAAU,YAAcC,QAAS,EAA7D,SACE,cAACC,EAAA,EAAD,CAAOC,SAAUP,EAAMQ,KAAvB,SAA8BR,EAAMS,Y,YCIpCC,EAAmBC,IAAW,CAClCC,MAAOD,IACG,oBACPE,IAAI,GAAI,sCACRD,MAAM,uBACNE,SAAS,qBACZC,SAAUJ,IACA,uBACPE,IAAI,EAAG,qDACPC,SAAS,0BAwHCE,MArHf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EACuC,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAF1B,wBAEqD,GAC3DC,EAASC,YAAU,CACvBC,cAAe,CACbf,MAAO,GACPG,SAAU,IAEZL,iBAAkBA,EAClBkB,SAAU,SAACC,GACTC,IACGC,KADH,UACWX,EADX,iBACmC,CAC/BR,MAAOiB,EAAOjB,MACdG,SAAUc,EAAOd,WAElBiB,MAAK,SAACC,GACe,YAAhBA,EAAOC,MAGTC,YAAW,WACRC,EAAQC,KAAK,cACdlB,EAAc,MACb,KACHA,GAAc,KAGdA,GAAc,GACdgB,YAAW,WACThB,EAAc,MACb,YAMPiB,EAAUE,cAChB,OACE,iCACkB,IAAfpB,EAAsB,cAACnB,EAAD,CAASS,KAAK,UAAUC,QAAQ,YAAe,IACtD,IAAfS,EACC,cAACnB,EAAD,CAASS,KAAK,QAAQC,QAAQ,8BAE9B,GAGF,+BACE,0BAAS8B,UAAU,QAAnB,UACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,eAAd,0BAEF,eAACC,EAAA,EAAD,CACEhC,KAAK,OACLiC,UAAU,OACVvC,GAAI,CACF,kBAAmB,CAAEwC,EAAG,EAAGvC,MAAO,QAEpCwC,YAAU,EACVC,aAAa,MACbC,UAAU,SACVjB,SAAUH,EAAOqB,aATnB,UAWE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTxC,KAAK,QACLyC,KAAK,QACLC,MAAM,QACNC,QAAQ,WACRC,YAAY,mBACZC,MAAO5B,EAAOI,OAAOjB,MACrB0C,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOgC,QAAQ7C,OAAS8C,QAAQjC,EAAOkC,OAAO/C,OACrDgD,WAAYnC,EAAOgC,QAAQ7C,OAASa,EAAOkC,OAAO/C,QAGpD,cAACmC,EAAA,EAAD,CACEC,WAAS,EACTxC,KAAK,WACLyC,KAAK,WACLY,GAAG,iBACHX,MAAM,WACNC,QAAQ,WACRC,YAAY,iBACZC,MAAO5B,EAAOI,OAAOd,SACrBuC,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOgC,QAAQ1C,UAAY2C,QAAQjC,EAAOkC,OAAO5C,UACxD6C,WAAYnC,EAAOgC,QAAQ1C,UAAYU,EAAOkC,OAAO5C,WAGvD,sBAAK+C,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAACC,EAAA,EAAD,CACEzD,KAAK,SACL0D,KAAK,SACLf,QAAQ,YACRgB,MAAM,OACNL,MAAO,CAAEM,OAAQ,OALnB,oBASA,cAACH,EAAA,EAAD,CACEC,KAAK,SACLf,QAAQ,YACRgB,MAAM,UACNL,MAAO,CAAEM,OAAQ,OACjBC,QAAS,kBAAMjC,EAAQC,KAAK,YAL9B,8C,sDC3GR3B,EAAmBC,IAAW,CAClC2D,SAAU3D,IACA,sBACPE,IAAI,EAAG,oCACPC,SAAS,oBAEZF,MAAOD,IACG,oBACPE,IAAI,GAAI,sCACRD,MAAM,uBACNE,SAAS,qBACZyD,YAAa5D,IACH,2BACPE,IAAI,GAAI,2CACRC,SAAS,4BACZC,SAAUJ,IACA,uBACPE,IAAI,EAAG,qDACPC,SAAS,wBAEZ0D,QAAS7D,IACC,sBACPE,IAAI,GAAI,wDACRC,SAAS,yBAkMC2D,MAhMf,WACE,IAAMrC,EAAUE,cAChB,EAAoCrB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EACuC,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAF1B,wBAEqD,GAC3DC,EAASC,YAAU,CACvBC,cAAe,CACb2C,SAAU,GACV1D,MAAO,GACP2D,YAAa,GACbxD,SAAU,GACVyD,QAAS,IAEX9D,iBAAkBA,EAClBkB,SAAU,SAACC,GACT,IAAM6C,EAAcC,SAASC,cAC3B,gCACAvB,MACFvB,IACGC,KADH,UACWX,EADX,sBACwC,CACpCkD,SAAUzC,EAAOyC,SACjB1D,MAAOiB,EAAOjB,MACdiE,OAAQH,EACRH,YAAaO,OAAOjD,EAAO0C,aAC3BxD,SAAUc,EAAOd,SACjByD,QAAS3C,EAAO2C,UAEjBxC,MAAK,SAACC,GAEe,iBAAhBA,EAAOC,OAETf,GAAc,GACdgB,YAAW,WACTC,EAAQC,KAAK,UACblB,EAAc,MACb,SAGN4D,OAAM,SAACC,UAad,OAPAC,qBAAU,WACRnD,IAAMoD,IAAN,UAAa9D,EAAb,uBAA0CY,MAAK,SAACmD,SAI/C,IAGD,iCACkB,IAAfjE,EACC,cAACnB,EAAD,CACES,KAAK,UACLC,QAAQ,0CAGV,GAEF,+BACE,0BAAS8B,UAAU,QAAnB,UACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,cAAd,2BAEF,eAACC,EAAA,EAAD,CACEhC,KAAK,OACLiC,UAAU,OACVvC,GAAI,CACF,kBAAmB,CAAEwC,EAAG,EAAGvC,MAAO,QAEpCwC,YAAU,EACVC,aAAa,MACbC,UAAU,SACVjB,SAAUH,EAAOqB,aATnB,UAWE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,WACLC,MAAM,YACNC,QAAQ,WACRC,YAAY,kBACZC,MAAO5B,EAAOI,OAAOyC,SACrBhB,SAAU7B,EAAO8B,aACjB6B,OAAQ3D,EAAO4D,WACf7B,MAAO/B,EAAOgC,QAAQa,UAAYZ,QAAQjC,EAAOkC,OAAOW,UACxDV,WAAYnC,EAAOgC,QAAQa,UAAY7C,EAAOkC,OAAOW,WAEvD,cAACvB,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLzC,KAAK,QACL0C,MAAM,QACNC,QAAQ,WACRC,YAAY,mBACZC,MAAO5B,EAAOI,OAAOjB,MACrB0C,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOgC,QAAQ7C,OAAS8C,QAAQjC,EAAOkC,OAAO/C,OACrDgD,WAAYnC,EAAOgC,QAAQ7C,OAASa,EAAOkC,OAAO/C,QAGpD,eAAC0E,EAAA,EAAD,CAAa7C,UAAU,WAAvB,UACE,cAAC8C,EAAA,EAAD,CAAW9C,UAAU,SAASqB,MAAO,CAAEjB,UAAW,QAAlD,oBAGA,eAAC2C,EAAA,EAAD,CACE,aAAW,SACXC,aAAa,OACbxC,KAAK,eAHP,UAKE,cAACyC,EAAA,EAAD,CACEzC,KAAK,SACLI,MAAM,OACNsC,QAAS,cAACC,EAAA,EAAD,IACT1C,MAAM,SAER,cAACwC,EAAA,EAAD,CACEzC,KAAK,SACLI,MAAM,SACNsC,QAAS,cAACC,EAAA,EAAD,IACT1C,MAAM,iBAIZ,cAACH,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,cACLC,MAAM,eACNC,QAAQ,WACRC,YAAY,qBACZC,MAAO5B,EAAOI,OAAO0C,YACrBjB,SAAU7B,EAAO8B,aACjBC,MACE/B,EAAOgC,QAAQc,aAAeb,QAAQjC,EAAOkC,OAAOY,aAEtDX,WACEnC,EAAOgC,QAAQc,aAAe9C,EAAOkC,OAAOY,cAGhD,cAACxB,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,WACLzC,KAAK,WACL0C,MAAM,WACNC,QAAQ,WACRC,YAAY,iBACZC,MAAO5B,EAAOI,OAAOd,SACrBuC,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOgC,QAAQ1C,UAAY2C,QAAQjC,EAAOkC,OAAO5C,UACxD6C,WAAYnC,EAAOgC,QAAQ1C,UAAYU,EAAOkC,OAAO5C,WAEvD,cAACgC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,UACLY,GAAG,iBACHX,MAAM,UACNC,QAAQ,WACRC,YAAY,oBACZC,MAAO5B,EAAOI,OAAO2C,QACrBlB,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOgC,QAAQe,SAAWd,QAAQjC,EAAOkC,OAAOa,SACvDZ,WAAYnC,EAAOgC,QAAQe,SAAW/C,EAAOkC,OAAOa,UAEtD,sBAAKV,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAACC,EAAA,EAAD,CACEzD,KAAK,SACL0D,KAAK,SACLf,QAAQ,YACRgB,MAAM,OACNL,MAAO,CAAEM,OAAQ,OALnB,oBASA,cAACH,EAAA,EAAD,CACEC,KAAK,SACLf,QAAQ,YACRgB,MAAM,UACNL,MAAO,CAAEM,OAAQ,OACjBC,QAAS,kBAAMjC,EAAQC,KAAK,WAL9B,8C,sDC/MC,SAASwD,IACtB,IAAMzD,EAAUE,cAChB,OACE,cAACE,EAAA,EAAD,CAAKtC,GAAI,CAAE4F,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,CAAQ3F,SAAS,SAAjB,SACE,eAAC4F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACE/B,KAAK,QACLgC,KAAK,QACL/B,MAAM,UACN,aAAW,OACXjE,GAAI,CAAEiG,GAAI,GALZ,SAOE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYjD,QAAQ,KAAKV,UAAU,MAAMvC,GAAI,CAAE4F,SAAU,GAAzD,SACE,sBACEzB,QAAS,kBAAMjC,EAAQC,KAAK,MAC5ByB,MAAO,CAAEuC,OAAQ,WAFnB,oBAOF,cAACpC,EAAA,EAAD,CAAQE,MAAM,UAAUE,QAAS,kBAAMjC,EAAQC,KAAK,WAApD,mBAGA,cAAC4B,EAAA,EAAD,CAAQE,MAAM,UAAUE,QAAS,kBAAMjC,EAAQC,KAAK,YAApD,2BCvBKiE,MAVf,WAEE,OACE,8BACE,oBAAIxC,MAAO,CAACjB,UAAU,UAAtB,qCCuBS0D,MAtBf,WACE,OACE,mCAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAACZ,EAAD,YCVKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFzC,SAAS0C,eAAe,SAM1BX,M","file":"static/js/main.73c22d58.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n    <Stack sx={{ width: \"100%\", position: \"absolute\" }} spacing={2}>\r\n      <Alert severity={props.type}>{props.message}</Alert>\r\n    </Stack>\r\n  );\r\n}\r\n","import \"./Login.css\";\r\nimport React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Message from \"../Message/Message.jsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .min(14, \"Email should be 14 characters long\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Login() {\r\n  const [messageBar, setMessageBar] = useState(\"\");\r\n  const dev = \"http://localhost:2000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      axios\r\n        .post(`${baseURL}/api/v1/login`, {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((result) => {\r\n          if (result.data === \"matched\") {\r\n            //message\r\n            // console.log(\"match\");\r\n            setTimeout(() => {\r\n               history.push(\"/dashboard\")\r\n              setMessageBar([]);\r\n            }, 1000);\r\n            setMessageBar(true);\r\n          } else {\r\n            // console.log(\"Email or password is invalid\");\r\n            setMessageBar(false);\r\n            setTimeout(() => {\r\n              setMessageBar([]);\r\n            }, 1000);\r\n          }\r\n        });\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      {messageBar === true ? <Message type=\"success\" message=\"Welcome\" /> : \"\"}\r\n      {messageBar === false ? (\r\n        <Message type=\"error\" message=\"Invalid email or password\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <main>\r\n        <section className=\"glass\">\r\n          <div className=\"flex\">\r\n            <h1 className=\"loginHeading\">Login Form</h1>\r\n          </div>\r\n          <Box\r\n            type=\"form\"\r\n            component=\"form\"\r\n            sx={{\r\n              \"& > :not(style)\": { m: 1, width: \"70%\" },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            textAlign=\"center\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter your Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"outlined-basic\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter Password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                style={{ margin: \"4px\" }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                style={{ margin: \"4px\" }}\r\n                onClick={() => history.push(\"/signup\")}\r\n              >\r\n                Create an account\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./Signup.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Message from \"../Message/Message\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n  fullName: yup\r\n    .string(\"Enter a valid Name\")\r\n    .min(8, \"Name should be 8 characters long\")\r\n    .required(\"Name is required\"),\r\n\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .min(14, \"Email should be 14 characters long\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  phoneNumber: yup\r\n    .string(\"Enter your phone number\")\r\n    .min(10, \"Phone number should be 10 integers long\")\r\n    .required(\"Phone number is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n\r\n  address: yup\r\n    .string(\"Enter your address\")\r\n    .min(20, \"Address should be of minimum 20 characters in length\")\r\n    .required(\"Address is required\"),\r\n});\r\nfunction Signup() {\r\n  const history = useHistory();\r\n  const [messageBar, setMessageBar] = useState(\"\");\r\n  const dev = \"http://localhost:2000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fullName: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      password: \"\",\r\n      address: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      const genderValue = document.querySelector(\r\n        'input[name=\"gender\"]:checked'\r\n      ).value;\r\n      axios\r\n        .post(`${baseURL}/api/v1/signupuser`, {\r\n          fullName: values.fullName,\r\n          email: values.email,\r\n          gender: genderValue,\r\n          phoneNumber: Number(values.phoneNumber),\r\n          password: values.password,\r\n          address: values.address,\r\n        })\r\n        .then((result) => {\r\n          // console.log(result.data);\r\n          if (result.data === \"user created\") {\r\n            //message\r\n            setMessageBar(true);\r\n            setTimeout(() => {\r\n              history.push(\"/login\")\r\n              setMessageBar(\"\");\r\n            }, 1000);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/api/v1/signupuser`).then((res) => {\r\n      // console.log(res);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {messageBar === true ? (\r\n        <Message\r\n          type=\"success\"\r\n          message=\"Welcome! Successfully account created\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <main>\r\n        <section className=\"glass\">\r\n          <div className=\"flex\">\r\n            <h1 className=\"signHeading\">Signup Form</h1>\r\n          </div>\r\n          <Box\r\n            type=\"form\"\r\n            component=\"form\"\r\n            sx={{\r\n              \"& > :not(style)\": { m: 1, width: \"70%\" },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            textAlign=\"center\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              name=\"fullName\"\r\n              label=\"Full Name\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter Your Name\"\r\n              value={formik.values.fullName}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n              helperText={formik.touched.fullName && formik.errors.fullName}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter your Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                Gender\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                defaultValue=\"male\"\r\n                name=\"genderParent\"\r\n              >\r\n                <FormControlLabel\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  control={<Radio />}\r\n                  label=\"Male\"\r\n                />\r\n                <FormControlLabel\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  control={<Radio />}\r\n                  label=\"Female\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              name=\"phoneNumber\"\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter Phone Number\"\r\n              value={formik.values.phoneNumber}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n              }\r\n              helperText={\r\n                formik.touched.phoneNumber && formik.errors.phoneNumber\r\n              }\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter Password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              name=\"address\"\r\n              id=\"outlined-basic\"\r\n              label=\"Address\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Type Your address\"\r\n              value={formik.values.address}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.address && Boolean(formik.errors.address)}\r\n              helperText={formik.touched.address && formik.errors.address}\r\n            />\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                style={{ margin: \"4px\" }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                style={{ margin: \"4px\" }}\r\n                onClick={() => history.push(\"/login\")}\r\n              >\r\n                I have an account\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <span\r\n              onClick={() => history.push(\"/\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              News\r\n            </span>\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n            Login\r\n          </Button>\r\n          <Button color=\"inherit\" onClick={() => history.push(\"/signup\")}>\r\n            Signup\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Dashboard() {\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{textAlign:\"center\"}}>Welcome to DashBoard</h1>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import \"./App.css\";\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n// import Message from \"./components/Message/Message\";\nfunction App() {\n  return (\n    <>\n    {/* <Message/> */}\n      <Switch>\n        <Route exact path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}